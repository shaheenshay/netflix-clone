{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shahe\\\\Desktop\\\\Clone\\\\netflix-clone\\\\src\\\\Row.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport './Row.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base_url = \"https:image.tmdb.org/t/p/original/\";\nfunction Row(_ref) {\n  _s();\n  let {\n    title,\n    fetchUrl,\n    isLargeRow\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n  console.table(movies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row_posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        className: `row_poster ${isLargeRow && \"row_posterLarge\"}`,\n        src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n        alt: movie.name\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(Row, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = Row;\nexport default Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useState","useEffect","axios","base_url","Row","title","fetchUrl","isLargeRow","movies","setMovies","fetchData","request","get","data","results","console","table","map","movie","poster_path","backdrop_path","name","id"],"sources":["C:/Users/shahe/Desktop/Clone/netflix-clone/src/Row.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from './axios';\r\nimport './Row.css';\r\n\r\nconst base_url = \"https:image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title,fetchUrl, isLargeRow}) {\r\n\r\n    const [movies, setMovies] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        async function fetchData() {\r\n            const request =await axios.get(fetchUrl);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, [fetchUrl]);\r\n\r\n    console.table(movies);\r\n\r\n  return (\r\n    <div className='row'>\r\n        <h2>{title}</h2>\r\n\r\n        <div className='row_posters'>\r\n          {movies.map((movie) => (\r\n            <img\r\n            key={movie.id} \r\n            className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\r\n             src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} \r\n             alt={movie.name}\r\n             />\r\n\r\n          ))}        \r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAO,WAAW;AAAC;AAEnB,MAAMC,QAAQ,GAAG,oCAAoC;AAErD,SAASC,GAAG,OAAgC;EAAA;EAAA,IAA/B;IAAEC,KAAK;IAACC,QAAQ;IAAEC;EAAU,CAAC;EAEtC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IAEZ,eAAeS,SAAS,GAAG;MACvB,MAAMC,OAAO,GAAE,MAAMT,KAAK,CAACU,GAAG,CAACN,QAAQ,CAAC;MACxCG,SAAS,CAACE,OAAO,CAACE,IAAI,CAACC,OAAO,CAAC;MAC/B,OAAOH,OAAO;IAClB;IACAD,SAAS,EAAE;EACf,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEdS,OAAO,CAACC,KAAK,CAACR,MAAM,CAAC;EAEvB,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAChB;MAAA,UAAKH;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eAEhB;MAAK,SAAS,EAAC,aAAa;MAAA,UACzBG,MAAM,CAACS,GAAG,CAAEC,KAAK,iBAChB;QAEA,SAAS,EAAG,cAAaX,UAAU,IAAI,iBAAkB,EAAE;QAC1D,GAAG,EAAG,GAAEJ,QAAS,GAAEI,UAAU,GAAGW,KAAK,CAACC,WAAW,GAAGD,KAAK,CAACE,aAAc,EAAE;QAC1E,GAAG,EAAEF,KAAK,CAACG;MAAK,GAHZH,KAAK,CAACI,EAAE;QAAA;QAAA;QAAA;MAAA,QAMd;IAAC;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV;AAAC,GAjCQlB,GAAG;AAAA,KAAHA,GAAG;AAmCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}