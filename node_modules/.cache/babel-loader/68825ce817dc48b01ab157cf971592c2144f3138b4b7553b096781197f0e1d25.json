{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shahe\\\\Desktop\\\\Projects\\\\Netflix-Clone\\\\src\\\\Row.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport './Row.css';\nimport YouTube from \"react-youtube\";\nimport movieTrailer from 'movie-trailer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\nfunction Row(_ref) {\n  _s();\n  let {\n    title,\n    fetchUrl,\n    isLargeRow\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      //https://developers.google.com/youtube/player_parameters\n      autoplay: 1\n    }\n  };\n  const handleClick = movie => {\n    if (trailerUrl) {\n      setTrailerUrl(\"\");\n    } else {\n      movieTrailer((movie === null || movie === void 0 ? void 0 : movie.name) || \"\").then(url => {\n        //https://www.youtube.com/watch?v=XtMThy8QKqU\n        const urlParams = new URLSearchParams(new URL(url).search);\n        setTrailerUrl(urlParams.get(\"v\"));\n      }).catch(error => console.log(error));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row_posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => handleClick(movie),\n        className: `row_poster ${isLargeRow && \"row_posterLarge\"}`,\n        src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n        alt: movie.name\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), trailerUrl && /*#__PURE__*/_jsxDEV(YouTube, {\n      videoId: trailerUrl,\n      opts: opts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Row, \"k63ruaDr6ck94JTzLN3dN+sD/HM=\");\n_c = Row;\nexport default Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useState","useEffect","axios","YouTube","movieTrailer","base_url","Row","title","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","fetchData","request","get","data","results","opts","height","width","playerVars","autoplay","handleClick","movie","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","map","poster_path","backdrop_path","id"],"sources":["C:/Users/shahe/Desktop/Projects/Netflix-Clone/src/Row.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from './axios';\r\nimport './Row.css';\r\nimport YouTube from \"react-youtube\"; \r\nimport movieTrailer from 'movie-trailer';\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title,fetchUrl, isLargeRow}) {\r\n\r\n    const [movies, setMovies] = useState([]);\r\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n \r\n    useEffect(() => {\r\n\r\n        async function fetchData() {\r\n          const request =await axios.get(fetchUrl);\r\n          setMovies(request.data.results);\r\n          return request;\r\n        }\r\n        fetchData();\r\n    }, [fetchUrl]);\r\n\r\n    const opts = {\r\n      height: \"390\",\r\n      width: \"100%\",\r\n      playerVars: {\r\n        //https://developers.google.com/youtube/player_parameters\r\n        autoplay: 1,\r\n      },\r\n    };\r\n    \r\n    const handleClick = (movie) => {\r\n      if (trailerUrl){\r\n        setTrailerUrl(\"\");\r\n      } else {\r\n        movieTrailer(movie?.name || \"\")\r\n          .then((url) => {\r\n            //https://www.youtube.com/watch?v=XtMThy8QKqU\r\n            const urlParams = new URLSearchParams(new URL(url).search);\r\n            setTrailerUrl(urlParams.get(\"v\"));\r\n          })\r\n          .catch((error) => console.log(error));\r\n      }\r\n    };\r\n\r\n  return (\r\n    <div className='row'>\r\n        <h1>{title}</h1>\r\n\r\n        <div className='row_posters'>\r\n          {movies.map((movie) => (\r\n            <img\r\n            key={movie.id} \r\n            onClick ={() => handleClick(movie)}\r\n            className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\r\n             src={`${base_url}${\r\n              isLargeRow ? movie.poster_path : movie.backdrop_path\r\n             }`} \r\n             alt={movie.name}\r\n             />\r\n\r\n          ))}        \r\n        </div>\r\n        {trailerUrl && <YouTube videoId={trailerUrl}opts={opts} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAO,WAAW;AAClB,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAOC,YAAY,MAAM,eAAe;AAAC;AAEzC,MAAMC,QAAQ,GAAG,sCAAsC;AAEvD,SAASC,GAAG,OAAgC;EAAA;EAAA,IAA/B;IAAEC,KAAK;IAACC,QAAQ;IAAEC;EAAU,CAAC;EAEtC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IAEZ,eAAea,SAAS,GAAG;MACzB,MAAMC,OAAO,GAAE,MAAMb,KAAK,CAACc,GAAG,CAACR,QAAQ,CAAC;MACxCG,SAAS,CAACI,OAAO,CAACE,IAAI,CAACC,OAAO,CAAC;MAC/B,OAAOH,OAAO;IAChB;IACAD,SAAS,EAAE;EACf,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;EAEd,MAAMW,IAAI,GAAG;IACXC,MAAM,EAAE,KAAK;IACbC,KAAK,EAAE,MAAM;IACbC,UAAU,EAAE;MACV;MACAC,QAAQ,EAAE;IACZ;EACF,CAAC;EAED,MAAMC,WAAW,GAAIC,KAAK,IAAK;IAC7B,IAAIb,UAAU,EAAC;MACbC,aAAa,CAAC,EAAE,CAAC;IACnB,CAAC,MAAM;MACLT,YAAY,CAAC,CAAAqB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEC,IAAI,KAAI,EAAE,CAAC,CAC5BC,IAAI,CAAEC,GAAG,IAAK;QACb;QACA,MAAMC,SAAS,GAAG,IAAIC,eAAe,CAAC,IAAIC,GAAG,CAACH,GAAG,CAAC,CAACI,MAAM,CAAC;QAC1DnB,aAAa,CAACgB,SAAS,CAACb,GAAG,CAAC,GAAG,CAAC,CAAC;MACnC,CAAC,CAAC,CACDiB,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;IACzC;EACF,CAAC;EAEH,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAChB;MAAA,UAAK3B;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eAEhB;MAAK,SAAS,EAAC,aAAa;MAAA,UACzBG,MAAM,CAAC2B,GAAG,CAAEZ,KAAK,iBAChB;QAEA,OAAO,EAAG,MAAMD,WAAW,CAACC,KAAK,CAAE;QACnC,SAAS,EAAG,cAAahB,UAAU,IAAI,iBAAkB,EAAE;QAC1D,GAAG,EAAG,GAAEJ,QAAS,GAChBI,UAAU,GAAGgB,KAAK,CAACa,WAAW,GAAGb,KAAK,CAACc,aACvC,EAAE;QACH,GAAG,EAAEd,KAAK,CAACC;MAAK,GANZD,KAAK,CAACe,EAAE;QAAA;QAAA;QAAA;MAAA,QASd;IAAC;MAAA;MAAA;MAAA;IAAA,QACE,EACL5B,UAAU,iBAAI,QAAC,OAAO;MAAC,OAAO,EAAEA,UAAW;MAAA,IAAI,EAAEO;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACxD;AAEV;AAAC,GA3DQb,GAAG;AAAA,KAAHA,GAAG;AA6DZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}